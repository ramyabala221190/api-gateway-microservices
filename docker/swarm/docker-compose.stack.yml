services:
    nginx:
       image: nginx:alpine
       deploy:
        placement:
          constraints: [node.labels.role == gateway]
       env_file: ../environments/common.env
       restart: always
       volumes:
         - nginx-logs-volume:/var/log/nginx/
  
    express-gateway-service-1:
      image: dockerenthusiast1992/my-express-gateway
      deploy:
        replicas: 3
        placement:
          constraints: [node.labels.role == gateway]
      env_file: ../environments/common.env
      volumes:
         - express-logs-volume:/var/log/express-gateway/
      # networks:
      #    - elk-network

   #  filebeat:
   #    restart: always
   #    build:
   #      context: ../
   #      dockerfile: filebeat/Dockerfile
   #    environment:
   #       - strict.perms=false
   #    volumes:
   #       - nginx-logs-volume:/var/log/nginx/:ro
   #       - express-logs-volume:/var/log/express-gateway/:ro
   #    networks:
   #       - elk-network

volumes:
  mongo-data:
  nginx-logs-volume:
  express-logs-volume:

networks:
   shared-swarm-net-dev:
      external: true
   shared-swarm-net-prod:
      external: true
   # elk-network:
   #    name: elk-network
   #    external: true

  # In this example, mongo-data is a named volume that ensures all data written 
  # by the MongoDB container to /data/db (MongoDB's default data directory) is saved persistently 
  # on the host system, even if the mongodb container is removed or recreated.