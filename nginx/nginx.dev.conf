# for docker compose up
# we need to specify the instance names because to create replicase we have created multiple docker services
upstream express_gateway_api{
    server express-gateway-service-1:${EXPRESS_GATEWAY_PORT};
    server express-gateway-service-2:${EXPRESS_GATEWAY_PORT};
    server express-gateway-service-3:${EXPRESS_GATEWAY_PORT};

}

# for docker swarm setup
# since swarm is creating replicas of the service using replicas field but the same service name is used
# so we just need to specify the service name
upstream express_gateway_api_swarm{
    server express-gateway-service:${EXPRESS_GATEWAY_PORT};
}


server{
    listen ${NGINX_PORT};
    default_type application/octet-stream;
    error_log /var/log/nginx/myerror.log debug;
    access_log /var/log/nginx/myaccess.log upstream_log;
    gzip                    on;
    gzip_comp_level         6;
    gzip_vary               on;
    gzip_min_length         1000;
    gzip_proxied            any;
    gzip_types              text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers            16 8k;
    client_max_body_size    256M;

        location / {
            proxy_set_header Host $http_host;  # $host only sends the hostname and not the port. $http_host sends both
            proxy_set_header X-Real-IP $remote_addr;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_hide_header X-Powered-By;
            proxy_pass http://express_gateway_api_swarm; //change it based on whether you want swarm or compose up
            
        }

    }