http:
  port: "${EXPRESS_GATEWAY_PORT}"
express:
# admin:
#   port: 9876
#   host: localhost
apiEndpoints:
  common:
    paths: "*"
  productApi:
    # host: "http://*"
    paths: ["/myproduct","/myproduct/*"]
  cartApi:
    # host: "http://*"
    paths: ["/mycart","/mycart/*"]
serviceEndpoints:
  productService:
    urls:  
     - http://product-node-1:${PRODUCT_SVCS_PORT}
     - http://product-node-2:${PRODUCT_SVCS_PORT}
     - http://product-node-3:${PRODUCT_SVCS_PORT}
    
  cartService:
    urls: 
     - http://cart-node-1:${CART_SVCS_PORT}
     - http://cart-node-2:${CART_SVCS_PORT}
     - http://cart-node-3:${CART_SVCS_PORT}
    
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - custom-logger
pipelines:
  commonPipeline:
     apiEndpoints:
       - common
     policies:
        - log: 
          - action:
              message: |
                    Request received:
                    Protocol: "${req.protocol}"
                    Method: "${req.method}"
                    Host: ${req.headers.host}
                    URL: ${req.originalUrl}
                    Headers: ${JSON.stringify(req.headers)}
                    Timestamp: ${new Date().toISOString()}
        - custom-logger:
           - action:
               message: 'Writing a log message to Winston logger'
  productPipeline:
    apiEndpoints:
      - productApi
    policies:
    # Uncomment "key-auth:" when instructed to in the Getting Started guide.
    # - key-auth:
    # So the request can be routed to mlutiple instances of express-gateway. Each instance maintains its own count.
    # So if all the 4 requests have not gone to a single instance,you will not get the below message.
    # To test this, in nginx config, in the upstream block, keep only 1 instance of express gateway
      - rate-limit:
           - action:
              max: 4
              windowMs: 60000
              message: 'You have exceeded 4 requests/min'
              rateLimitBy: ${req.headers.host}
      - proxy:
          - action:
              serviceEndpoint: productService 
              changeOrigin: true
              timeout: 5000
              #stripPath: true

  cartPipeline:
    apiEndpoints:
      - cartApi
    policies:
    # Uncomment "key-auth:" when instructed to in the Getting Started guide.
    # - key-auth:
      - rate-limit:
           - action:
              max: 2
              windowMs: 60000
              message: 'You have exceeded 2 requests/min'
              rateLimitBy: ${req.headers.host}
      - proxy:
          - action:
              serviceEndpoint: cartService 
              changeOrigin: true
              timeout: 5000
              #stripPath: true
